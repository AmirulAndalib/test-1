name: test

on:
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
      outputX: ${{ steps.step3.outputs.matrix1 }}
      outputZ: ${{ steps.step3.outputs.matrix2 }}
    steps:
      - id: step1
        run: echo "::set-output name=test::hello"
      - id: step2
        run: echo "::set-output name=test::world"
      - id: step3
        run: |
          set -v
          export input_matrix=$(for i in $(seq -w 01 5); do
            printf "\"%s\"," "${i}"
          done)
          set -x
          export matrix=''"'[${input_matrix%,*}]'"''
          echo ${matrix}
          echo "::set-output name=matrix1::${matrix}"
          echo ${{ steps.set-matrix.outputs.matrix }}
          export load_matrix='["01","02","03","04","05"]'
          echo "::set-output name=matrix2::${load_matrix}"
          set +xv
  job2:
    runs-on: ubuntu-latest
    needs: job1
    strategy:
      fail-fast: true
      max-parallel: 6
      matrix:
        partnum1: ${{fromJson(needs.job1.outputs.outputX)}}
        partnum2: ${{fromJson(needs.job1.outputs.outputZ)}}
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
      - name: test result
        env:
          partnum1: ${{ matrix.partnum1 }}
          partnum2: ${{ matrix.partnum2 }}
        run: |
          echo ${{env.partnum1}} - ${{env.partnum2}}
